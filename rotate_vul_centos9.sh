#!/bin/bash
#
# rotate_vul_centos9.sh - Xoay (rotate) proxy IPv6 tr√™n CentOS 9 Stream x64
#

set -e

WORKDIR="/home/proxy-installer"
WORKDATA="${WORKDIR}/data.txt"
PROXYCFG="/usr/local/etc/3proxy/3proxy.cfg"
IFACE=$(ip -o -4 route show to default | awk '{print $5}')

mkdir -p "$WORKDIR"

# 1) H√†m x√≥a to√†n b·ªô IPv6 c≈© c√≥ c√πng prefix
clear_old_ipv6() {
    local prefix="$1"
    echo "üîÑ X√≥a t·∫•t c·∫£ IPv6 c≈© tr√™n interface $IFACE v·ªõi prefix $prefix..."
    # L·∫•y danh s√°ch m·ªçi ƒë·ªãa ch·ªâ inet6 c√≥ prefix, sau ƒë√≥ x√≥a
    ip -6 addr show dev "$IFACE" | \
      awk -v pfx="$prefix" '$1=="inet6" && $2 ~ "^"pfx {print $2}' | \
      while read -r old; do
          ip -6 addr del "$old" dev "$IFACE"
      done
}

# 2) H√†m sinh chu·ªói ng·∫´u nhi√™n 5 k√Ω t·ª±
random() {
    tr </dev/urandom -dc A-Za-z0-9 | head -c5
    echo
}

# 3) M·∫£ng hex ƒë·ªÉ sinh ph·∫ßn suffix IPv6
array=(1 2 3 4 5 6 7 8 9 0 a b c d e f)
gen64() {
    ip64() {
        printf "%s" "${array[$RANDOM % 16]}${array[$RANDOM % 16]}${array[$RANDOM % 16]}${array[$RANDOM % 16]}"
    }
    echo "$1:$(ip64):$(ip64):$(ip64):$(ip64)"
}

# 4) H√†m sinh d·ªØ li·ªáu proxy m·ªõi: user/pass, IPv4, port, IPv6
gen_data() {
    seq "$FIRST_PORT" "$LAST_PORT" | while read -r port; do
        echo "usr$(random)/pass$(random)/$IP4/$port/$(gen64 "$IP6")"
    done > "$WORKDATA"
}

# 5) H√†m sinh file c·∫•u h√¨nh 3proxy m·ªõi d·ª±a tr√™n data.txt
gen_3proxy() {
    cat <<EOF
daemon
maxconn 1000
nscache 65536
timeouts 1 5 30 60 180 1800 15 60
setgid 65535
setuid 65535
flush
auth strong
users $(awk -F "/" 'BEGIN{ORS="";} {printf "%s:CL:%s ", \$1, \$2}' "${WORKDATA}")
$(awk -F "/" '{print "auth strong\nallow " $1 "\nproxy -6 -n -a -p"$4" -i"$3" -e"$5"\nflush\n"}' "${WORKDATA}")
EOF
}

# 6) H√†m ghi file proxy.txt (host:port:user:pass) cho ng∆∞·ªùi d√πng
gen_proxy_file_for_user() {
    awk -F "/" '{print $3 ":" $4 ":" $1 ":" $2}' "${WORKDATA}" > "$WORKDIR/proxy.txt"
}

# --- B·∫Øt ƒë·∫ßu ch·∫°y rotate ---

# A) L·∫•y prefix IPv6 hi·ªán t·∫°i (4 block ƒë·∫ßu)
IP6_FULL=$(curl -6 -s icanhazip.com)
IP6=$(echo "$IP6_FULL" | cut -f1-4 -d':')
if [[ -z "$IP6" ]]; then
    echo "‚ùå Kh√¥ng l·∫•y ƒë∆∞·ª£c prefix IPv6."
    exit 1
fi

# B) X√≥a IPv6 c≈© tr√™n interface
clear_old_ipv6 "$IP6"

# C) D·ª´ng d·ªãch v·ª• 3proxy (n·∫øu ƒëang ch·∫°y)
echo "‚è∏Ô∏è T·∫°m d·ª´ng 3proxy..."
systemctl stop 3proxy || true

# D) L·∫•y IPv4 v√† h·ªèi s·ªë l∆∞·ª£ng proxy
IP4=$(curl -4 -s icanhazip.com)
if [[ -z "$IP4" ]]; then
    echo "‚ùå Kh√¥ng l·∫•y ƒë∆∞·ª£c IPv4."
    exit 1
fi
echo "üîç IPv4 hi·ªán t·∫°i: $IP4"
echo "üîç IPv6 prefix: $IP6"
echo "üîç IPv4 hi·ªán t·∫°i: $IP4"
echo "üîç IPv6 prefix: $IP6"
read -rp "How many proxy do you want to create? " COUNT
if ! [[ "$COUNT" =~ ^[0-9]+$ ]]; then
    echo "‚ùå S·ªë l∆∞·ª£ng kh√¥ng h·ª£p l·ªá."
    exit 1
fi

FIRST_PORT=10000
LAST_PORT=$(( FIRST_PORT + COUNT - 1 ))

# E) T·∫°o data.txt m·ªõi
echo "‚û°Ô∏è T·∫°o file d·ªØ li·ªáu proxy (data.txt)..."
gen_data

# F) Th√™m IPv6 m·ªõi l√™n interface
echo "‚û°Ô∏è Th√™m IPv6 m·ªõi l√™n interface $IFACE..."
awk -F "/" -v iface="$IFACE" '{print "ip -6 addr add " $5 "/64 dev "iface}' "${WORKDATA}" > "${WORKDIR}/boot_ifconfig.sh"
chmod +x "${WORKDIR}/boot_ifconfig.sh"
bash "${WORKDIR}/boot_ifconfig.sh"

# G) C·∫≠p nh·∫≠t c·∫•u h√¨nh 3proxy m·ªõi
echo "‚û°Ô∏è C·∫≠p nh·∫≠t c·∫•u h√¨nh 3proxy..."
gen_3proxy > "$PROXYCFG"
chmod 644 "$PROXYCFG"

# H) Kh·ªüi ƒë·ªông l·∫°i 3proxy
echo "‚û°Ô∏è Kh·ªüi ƒë·ªông l·∫°i d·ªãch v·ª• 3proxy..."
ulimit -n 10048
systemctl daemon-reload
systemctl start 3proxy

# I) Ghi file proxy.txt cho user t·∫£i xu·ªëng
gen_proxy_file_for_user

echo "‚úÖ Rotate proxy ho√†n t·∫•t!"
echo "- File danh s√°ch proxy: $WORKDIR/proxy.txt"
echo "- ƒê·ªÉ t·ª± ƒë·ªông th√™m IPv6 sau reboot, ch·∫°y: bash $WORKDIR/boot_ifconfig.sh"
echo "Rotate Done"
